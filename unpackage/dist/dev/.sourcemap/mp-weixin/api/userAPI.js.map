{"version":3,"file":"userAPI.js","sources":["api/userAPI.js"],"sourcesContent":["// userAPI.js\r\nimport request from '../util/request';\r\nimport { alertFail, showSuccess } from '../util/showMessages';\r\nimport { useUserStore } from '../store/userStore';\r\nimport { useTabStore } from '../store/tabStore';\r\nimport { useActivityStore } from '../store/activityStore';\r\nimport { getUserActivity, getJoinedActivity } from './activityAPI';\r\nimport { geyMyGroup } from './GroupApI';\r\n\r\n/**\r\n * 用户注册\r\n * @param {Object} data - 注册信息\r\n * @returns {Promise} - 返回注册结果\r\n */\r\nexport const postRegisterInfo = async (data) => {\r\n    try {\r\n        let res = await request.post('/user/public/register', data);\r\n        \r\n        const userStore = useUserStore();\r\n        userStore.quit();\r\n        userStore.setUser(res?.data?.data);\r\n        userStore.setToken(res?.data?.data?.token);\r\n        userStore.setIsLogin(true);\r\n        \r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(postRegisterInfo.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 用户登录\r\n * @param {Object} data - 登录信息\r\n * @returns {Promise} - 返回登录结果\r\n */\r\nexport const postLoginInfo = async (data) => {\r\n    try {\r\n        let res = await request.post('/user/public/login', data);\r\n        if (res.data?.code === 500) {\r\n            uni.showToast({\r\n                title: res?.data?.msg,\r\n                icon: 'none'\r\n            });\r\n        }\r\n        \r\n        const userStore = useUserStore();\r\n        userStore.setUser(res.data.data);\r\n        userStore.setToken(res?.data.data.token);\r\n        userStore.setIsLogin(true);\r\n        \r\n        await getJoinedActivity();\r\n        await getUserActivity()\r\n            .then(res => {\r\n                userStore.setMyActivity(res?.data);\r\n            });\r\n        await getFriend();\r\n        await getFollowList()\r\n            .then(res => {\r\n                userStore.setFollowData(res?.data);\r\n            });\r\n        await getFriendRequest()\r\n            .then(res => {\r\n                userStore.setSystemInfo(res?.data);\r\n            });\r\n        await geyMyGroup();\r\n        \r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(postLoginInfo.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 上传头像\r\n * @param {Object} data - 头像数据\r\n * @returns {Promise} - 返回上传结果\r\n */\r\nexport const postAvatar = async (data) => {\r\n    try {\r\n        let res = await request.post('/user/public/avatar', data);\r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(postAvatar.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 删除头像\r\n * @param {string} fileName - 头像文件名\r\n * @returns {Promise} - 返回删除结果\r\n */\r\nexport const deleteAvatar = async (fileName) => {\r\n    try {\r\n        let res = await request.delete(`/user/public/avatar/${fileName}`);\r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(deleteAvatar.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 用户退出\r\n * @returns {Promise} - 返回退出结果\r\n */\r\nexport const userQuit = async () => {\r\n    try {\r\n        let res = await request.post(`/user/quit`);\r\n        const userStore = useUserStore();\r\n        userStore.quit();\r\n        \r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(userQuit.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 编辑用户信息\r\n * @param {Object} data - 用户信息\r\n * @returns {Promise} - 返回编辑结果\r\n */\r\nexport const userEditInfo = async (data) => {\r\n    try {\r\n        let res = await request.post('/user/editInfo', data);\r\n        res = res.data;\r\n        if (res?.code === 200) {\r\n            const userStore = useUserStore();\r\n            userStore.setUser(res.data);\r\n        } else {\r\n            uni.showToast({\r\n                title: res?.msg,\r\n                icon: 'none'\r\n            });\r\n        }\r\n    } catch (e) {\r\n        alertFail(userEditInfo.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 刷新Token\r\n * @returns {Promise} - 返回刷新结果\r\n */\r\nexport const reFreshToken = async () => {\r\n    const userStore = useUserStore();\r\n    try {\r\n        let res = await request.get('/user/reFlashToken');\r\n        \r\n        userStore.setToken(res?.data?.data);\r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(reFreshToken.name, e?.message);\r\n        userStore.quit();\r\n        uni.showToast({\r\n            title: '登录已过期，请重新登录',\r\n            icon: 'none'\r\n        });\r\n        useTabStore().setTab(2);\r\n    }\r\n};\r\n\r\n/**\r\n * 获取好友列表\r\n * @returns {Promise} - 返回好友列表\r\n */\r\nexport const getFriend = async () => {\r\n    try {\r\n        let res = await request.get('/user/friend/get');\r\n        useUserStore().setFriend(res?.data?.data || []);\r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(getFriend.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 关注用户\r\n * @param {string} userId - 用户ID\r\n * @returns {Promise} - 返回关注结果\r\n */\r\nexport const follow = async (userId) => {\r\n    try {\r\n        let res = await request.post('/user/follow', userId, {\r\n            header: {\"Content-Type\": \"application/json\"}\r\n        });\r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(follow.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 取消关注\r\n * @param {string} userId - 用户ID\r\n * @returns {Promise} - 返回取消关注结果\r\n */\r\nexport const unfollow = async (userId) => {\r\n    try {\r\n        let res = await request.post('/user/unfollow', userId, {\r\n            header: {\"Content-Type\": \"application/json\"}\r\n        });\r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(unfollow.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 获取关注列表\r\n * @param {string|null} userId - 用户ID，为null时获取当前用户的关注列表\r\n * @returns {Promise} - 返回关注列表\r\n */\r\nexport const getFollowList = async (userId = null) => {\r\n    try {\r\n        let res = await request.get('/user/followList', {\r\n            userId: userId\r\n        });\r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(getFollowList.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 获取用户信息\r\n * @param {string|null} userId - 用户ID，为null时获取当前用户信息\r\n * @returns {Promise} - 返回用户信息\r\n */\r\nexport const getUserInfo = async (userId = null) => {\r\n    try {\r\n        let res = await request.get('/user/info', {\r\n            userId: userId\r\n        });\r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(getUserInfo.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 添加好友\r\n * @param {string} friendAccount - 好友账号\r\n * @returns {Promise} - 返回添加好友结果\r\n */\r\nexport const addFriend = async (friendAccount) => {\r\n    try {\r\n        let res = await request.post('/user/friend/add', friendAccount);\r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(addFriend.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 获取好友请求\r\n * @returns {Promise} - 返回好友请求列表\r\n */\r\nexport const getFriendRequest = async () => {\r\n    try {\r\n        let res = await request.get('/user/friend/getRequest');\r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(getFriendRequest.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 获取请求者信息\r\n * @param {Array} userList - 用户ID列表\r\n * @returns {Promise} - 返回请求者信息\r\n */\r\nexport const getRequesterInfo = async (userList) => {\r\n    try {\r\n        // 需要处理数组参数，UniApp中可以直接传递\r\n        let res = await request.get('/user/friend/requester-info', {\r\n            userList: userList\r\n        });\r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(getRequesterInfo.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 接受好友请求\r\n * @param {string} requestId - 请求ID\r\n * @returns {Promise} - 返回接受结果\r\n */\r\nexport const friendRequestAccept = async (requestId) => {\r\n    try {\r\n        let res = await request.post('/user/friend/request-accept', requestId);\r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(friendRequestAccept.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 拒绝好友请求\r\n * @param {string} requestId - 请求ID\r\n * @returns {Promise} - 返回拒绝结果\r\n */\r\nexport const friendRequestRefuse = async (requestId) => {\r\n    try {\r\n        let res = await request.post('/user/friend/request-refuse', requestId);\r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(friendRequestRefuse.name, e?.message);\r\n    }\r\n}; "],"names":["request","uni","useUserStore","getJoinedActivity","getUserActivity","res","geyMyGroup","alertFail","useTabStore"],"mappings":"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"}