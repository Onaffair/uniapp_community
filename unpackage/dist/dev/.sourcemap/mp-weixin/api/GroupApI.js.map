{"version":3,"file":"GroupApI.js","sources":["api/GroupApI.js"],"sourcesContent":["// GroupApI.js\r\nimport request from '../util/request';\r\nimport { useUserStore } from '../store/userStore';\r\nimport { alertFail } from '../util/showMessages';\r\n\r\n/**\r\n * 创建群组\r\n * @param {Object} activity - 活动数据\r\n * @returns {Promise} - 返回创建结果\r\n */\r\nexport const createGroup = async (activity) => {\r\n    try {\r\n        let res = await request.post('/group/create-group', activity);\r\n        console.log(\"creatGroup\", res?.data);\r\n        const userStore = useUserStore();\r\n        userStore.getGroup().push((res?.data?.data));\r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(createGroup.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 获取我的群组\r\n * @returns {Promise} - 返回我的群组列表\r\n */\r\nexport const geyMyGroup = async () => {\r\n    try {\r\n        let res = await request.get('/group/my-group');\r\n        const userStore = useUserStore();\r\n        userStore.setGroup(res?.data?.data);\r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(geyMyGroup.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 加入群组\r\n * @param {string} activityId - 活动ID\r\n * @returns {Promise} - 返回加入结果\r\n */\r\nexport const joinGroup = async (activityId) => {\r\n    try {\r\n        let res = await request.post('/group/join-group', activityId);\r\n        const userStore = useUserStore();\r\n        userStore.getGroup().push((res?.data?.data));\r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(joinGroup.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 退出群组\r\n * @param {string} activityId - 活动ID\r\n * @returns {Promise} - 返回退出结果\r\n */\r\nexport const quitGroup = async (activityId) => {\r\n    try {\r\n        let res = await request.post('/group/quit-group', activityId);\r\n        await geyMyGroup();\r\n        \r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(quitGroup.name, e?.message);\r\n    }\r\n};\r\n\r\n/**\r\n * 更新群组信息\r\n * @param {Object} group - 群组数据\r\n * @returns {Promise} - 返回更新结果\r\n */\r\nexport const updateGroup = async (group) => {\r\n    try {\r\n        let res = await request.post('/group/update-group', group);\r\n        \r\n        return res?.data;\r\n    } catch (e) {\r\n        alertFail(updateGroup.name, e?.message);\r\n        throw e;\r\n    }\r\n}; "],"names":["request","useUserStore","alertFail"],"mappings":";;;;;AA0BY,MAAC,aAAa,YAAY;;AAClC,MAAI;AACA,QAAI,MAAM,MAAMA,aAAAA,QAAQ,IAAI,iBAAiB;AAC7C,UAAM,YAAYC,gBAAAA;AAClB,cAAU,UAAS,gCAAK,SAAL,mBAAW,IAAI;AAClC,WAAO,2BAAK;AAAA,EACf,SAAQ,GAAG;AACRC,sBAAAA,UAAU,WAAW,MAAM,uBAAG,OAAO;AAAA,EACxC;AACL;;"}