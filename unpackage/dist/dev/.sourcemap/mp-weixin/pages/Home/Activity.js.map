{"version":3,"file":"Activity.js","sources":["pages/Home/Activity.vue","../../../HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RDovQ29kZS91bmktYXBwUHJvamVjdC91bmkvcGFnZXMvSG9tZS9BY3Rpdml0eS52dWU"],"sourcesContent":["<template>\r\n  <view>\r\n    <view v-if=\"!userStore.getIsLogin()\" class=\"login-hint\">\r\n      请先登录\r\n    </view>\r\n    <view v-else>\r\n      <!-- 选项卡 -->\r\n      <view class=\"tabs\">\r\n        <view \r\n          class=\"tab-item\" \r\n          :class=\"{ active: activeTab === 0 }\" \r\n          @tap=\"activeTab = 0\"\r\n        >\r\n          发起的活动\r\n        </view>\r\n        <view \r\n          class=\"tab-item\" \r\n          :class=\"{ active: activeTab === 1 }\" \r\n          @tap=\"activeTab = 1\"\r\n        >\r\n          参加的活动\r\n        </view>\r\n      </view>\r\n      \r\n      <!-- 活动列表 -->\r\n      <scroll-view \r\n        scroll-y=\"true\" \r\n        class=\"activity-list\"\r\n        @scrolltolower=\"onLoadMore\"\r\n        refresher-enabled=\"true\"\r\n        :refresher-triggered=\"loading\"\r\n        @refresherrefresh=\"onRefresh\"\r\n      >\r\n        <!-- 发起的活动列表 -->\r\n        <block v-if=\"activeTab === 0\">\r\n          <view \r\n            v-for=\"activity in myActivity\" \r\n            :key=\"activity.id\"\r\n            class=\"activity-item\"\r\n            @tap=\"navigateToDetail(activity.id)\"\r\n          >\r\n            <view class=\"activity-title\">{{ activity.title }}</view>\r\n            <view class=\"activity-desc\">{{ activity.highlight }}</view>\r\n            <view class=\"activity-arrow\">></view>\r\n          </view>\r\n          <view v-if=\"finished && myActivity.length === 0\" class=\"empty-hint\">\r\n            暂无发起的活动\r\n          </view>\r\n          <view v-if=\"loading && !finished\" class=\"loading-hint\">\r\n            加载中...\r\n          </view>\r\n          <view v-if=\"finished && myActivity.length > 0\" class=\"end-hint\">\r\n            没有更多了\r\n          </view>\r\n        </block>\r\n        \r\n        <!-- 参加的活动列表 -->\r\n        <block v-if=\"activeTab === 1\">\r\n          <view \r\n            v-for=\"activity in myParticipation\" \r\n            :key=\"activity.id\"\r\n            class=\"activity-item\"\r\n            @tap=\"navigateToDetail(activity.id)\"\r\n          >\r\n            <view class=\"activity-title\">{{ activity.title }}</view>\r\n            <view class=\"activity-desc\">{{ activity.highlight }}</view>\r\n            <view class=\"activity-arrow\">></view>\r\n          </view>\r\n          <view v-if=\"finished && myParticipation.length === 0\" class=\"empty-hint\">\r\n            暂无参加的活动\r\n          </view>\r\n          <view v-if=\"loading && !finished\" class=\"loading-hint\">\r\n            加载中...\r\n          </view>\r\n          <view v-if=\"finished && myParticipation.length > 0\" class=\"end-hint\">\r\n            没有更多了\r\n          </view>\r\n        </block>\r\n      </scroll-view>\r\n      \r\n      <!-- 悬浮添加按钮 -->\r\n      <view class=\"floating-button\" @tap=\"goToCreateActivity\">\r\n        +\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { useUserStore } from \"@/store/userStore\";\r\n\r\nconst activeTab = ref(0);\r\nconst loading = ref(false);\r\nconst finished = ref(false);\r\n\r\nconst userStore = useUserStore();\r\nconst myActivity = ref(userStore.getMyActivity() || []);\r\nconst myParticipation = ref(userStore.getParticipation() || []);\r\n\r\n// 加载发起的活动\r\nconst loadInitiatedActivities = async () => {\r\n  if (finished.value) return;\r\n  \r\n  loading.value = true;\r\n  try {\r\n    // 这里应该调用实际的API，为简化保留原代码逻辑\r\n    setTimeout(() => {\r\n      // 数据已通过userStore获取，这里只模拟加载过程\r\n      loading.value = false;\r\n      finished.value = true;\r\n    }, 1000);\r\n  } catch (error) {\r\n    console.error('加载发起的活动失败', error);\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// 加载参加的活动\r\nconst loadParticipatedActivities = async () => {\r\n  if (finished.value) return;\r\n  \r\n  loading.value = true;\r\n  try {\r\n    // 这里应该调用实际的API，为简化保留原代码逻辑\r\n    setTimeout(() => {\r\n      // 数据已通过userStore获取，这里只模拟加载过程\r\n      loading.value = false;\r\n      finished.value = true;\r\n    }, 1000);\r\n  } catch (error) {\r\n    console.error('加载参加的活动失败', error);\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// 下拉刷新\r\nconst onRefresh = () => {\r\n  finished.value = false;\r\n  if (activeTab.value === 0) {\r\n    loadInitiatedActivities();\r\n  } else {\r\n    loadParticipatedActivities();\r\n  }\r\n};\r\n\r\n// 加载更多\r\nconst onLoadMore = () => {\r\n  if (activeTab.value === 0) {\r\n    loadInitiatedActivities();\r\n  } else {\r\n    loadParticipatedActivities();\r\n  }\r\n};\r\n\r\n// 跳转到活动详情\r\nconst navigateToDetail = (id) => {\r\n  uni.navigateTo({\r\n    url: `/pages/Detail/ActivityDetail?id=${id}`\r\n  });\r\n};\r\n\r\n// 跳转到活动发布页面\r\nconst goToCreateActivity = () => {\r\n  uni.navigateTo({\r\n    url: '/pages/launchActivity/LaunchActivity'\r\n  });\r\n};\r\n</script>\r\n\r\n<style>\r\n.login-hint {\r\n  padding: 40rpx;\r\n  text-align: center;\r\n  font-size: 32rpx;\r\n  color: #666;\r\n}\r\n\r\n.tabs {\r\n  display: flex;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.tab-item {\r\n  flex: 1;\r\n  text-align: center;\r\n  padding: 24rpx 0;\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  position: relative;\r\n}\r\n\r\n.tab-item.active {\r\n  color: #007bff;\r\n}\r\n\r\n.tab-item.active::after {\r\n  content: '';\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0;\r\n  width: 40%;\r\n  height: 4rpx;\r\n  background-color: #007bff;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n.activity-list {\r\n  height: calc(100vh - 180rpx);\r\n}\r\n\r\n.activity-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 30rpx;\r\n  border-bottom: 1px solid #eee;\r\n  background-color: #fff;\r\n  position: relative;\r\n}\r\n\r\n.activity-title {\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n  margin-bottom: 10rpx;\r\n}\r\n\r\n.activity-desc {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n}\r\n\r\n.activity-arrow {\r\n  position: absolute;\r\n  right: 30rpx;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  color: #ccc;\r\n  font-weight: bold;\r\n}\r\n\r\n.empty-hint,\r\n.loading-hint,\r\n.end-hint {\r\n  text-align: center;\r\n  padding: 30rpx;\r\n  color: #999;\r\n  font-size: 26rpx;\r\n}\r\n\r\n.floating-button {\r\n  position: fixed;\r\n  bottom: 160rpx;\r\n  right: 40rpx;\r\n  width: 120rpx;\r\n  height: 120rpx;\r\n  background-color: #ff5722;\r\n  color: white;\r\n  font-size: 64rpx;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  line-height: 120rpx;\r\n  border-radius: 50%;\r\n  box-shadow: 0 8rpx 20rpx rgba(0, 0, 0, 0.3);\r\n  z-index: 999;\r\n}\r\n</style> ","import Component from 'D:/Code/uni-appProject/uni/pages/Home/Activity.vue'\nwx.createComponent(Component)"],"names":["ref","useUserStore","uni","Component"],"mappings":";;;;;;AA4FA,UAAM,YAAYA,cAAAA,IAAI,CAAC;AACvB,UAAM,UAAUA,cAAAA,IAAI,KAAK;AACzB,UAAM,WAAWA,cAAAA,IAAI,KAAK;AAE1B,UAAM,YAAYC,gBAAY,aAAA;AAC9B,UAAM,aAAaD,cAAAA,IAAI,UAAU,cAAe,KAAI,CAAE,CAAA;AACtD,UAAM,kBAAkBA,cAAAA,IAAI,UAAU,iBAAkB,KAAI,CAAE,CAAA;AAG9D,UAAM,0BAA0B,YAAY;AAC1C,UAAI,SAAS;AAAO;AAEpB,cAAQ,QAAQ;AAChB,UAAI;AAEF,mBAAW,MAAM;AAEf,kBAAQ,QAAQ;AAChB,mBAAS,QAAQ;AAAA,QAClB,GAAE,GAAI;AAAA,MACR,SAAQ,OAAO;AACdE,sBAAc,MAAA,MAAA,SAAA,kCAAA,aAAa,KAAK;AAChC,gBAAQ,QAAQ;AAAA,MACjB;AAAA,IACH;AAGA,UAAM,6BAA6B,YAAY;AAC7C,UAAI,SAAS;AAAO;AAEpB,cAAQ,QAAQ;AAChB,UAAI;AAEF,mBAAW,MAAM;AAEf,kBAAQ,QAAQ;AAChB,mBAAS,QAAQ;AAAA,QAClB,GAAE,GAAI;AAAA,MACR,SAAQ,OAAO;AACdA,sBAAc,MAAA,MAAA,SAAA,kCAAA,aAAa,KAAK;AAChC,gBAAQ,QAAQ;AAAA,MACjB;AAAA,IACH;AAGA,UAAM,YAAY,MAAM;AACtB,eAAS,QAAQ;AACjB,UAAI,UAAU,UAAU,GAAG;AACzB;MACJ,OAAS;AACL;MACD;AAAA,IACH;AAGA,UAAM,aAAa,MAAM;AACvB,UAAI,UAAU,UAAU,GAAG;AACzB;MACJ,OAAS;AACL;MACD;AAAA,IACH;AAGA,UAAM,mBAAmB,CAAC,OAAO;AAC/BA,oBAAAA,MAAI,WAAW;AAAA,QACb,KAAK,mCAAmC,EAAE;AAAA,MAC9C,CAAG;AAAA,IACH;AAGA,UAAM,qBAAqB,MAAM;AAC/BA,oBAAAA,MAAI,WAAW;AAAA,QACb,KAAK;AAAA,MACT,CAAG;AAAA,IACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtKA,GAAG,gBAAgBC,SAAS;"}