{"version":3,"file":"userStore.js","sources":["store/userStore.js"],"sourcesContent":["// userStore.js\r\nimport { defineStore } from \"pinia\"\r\nimport { ref } from \"vue\"\r\n\r\nconst emptyUserDetail = {\r\n    account: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    avatar: \"\",\r\n    status: \"\",\r\n    phone: \"\",\r\n    role: 0\r\n}\r\n\r\nexport const useUserStore = defineStore('user', () => {\r\n    /*********State**********/\r\n    const isLogin = ref(false)\r\n    const userDetail = ref({...emptyUserDetail})\r\n    const token = ref(\"\")\r\n    const participation = ref([])\r\n    const myActivity = ref([])\r\n    const friend = ref([])\r\n    const group = ref([])\r\n    const followData = ref([])\r\n    const systemInfo = ref([])\r\n    /*********State**********/\r\n\r\n    /* ***************Getter ************/\r\n    const getUser = () => {\r\n        return userDetail.value\r\n    }\r\n    \r\n    const getToken = () => {\r\n        return token.value\r\n    }\r\n    \r\n    const getIsLogin = () => {\r\n        return isLogin.value\r\n    }\r\n    \r\n    const getParticipation = () => {\r\n        return participation.value\r\n    }\r\n    \r\n    const getMyActivity = () => {\r\n        return myActivity.value\r\n    }\r\n    \r\n    const getFriend = () => {\r\n        return friend.value\r\n    }\r\n    \r\n    const getGroup = () => {\r\n        return group.value\r\n    }\r\n    \r\n    const getFollowData = () => {\r\n        return followData.value\r\n    }\r\n    \r\n    const getSystemInfo = () => {\r\n        return systemInfo.value\r\n    }\r\n    /* ***************Getter ************/\r\n\r\n    /* ************Setter ******************/\r\n    const setUser = (data) => {\r\n        const fieldsToUpdate = ['account', 'username', 'email', 'avatar', 'status', 'phone', 'role']\r\n        fieldsToUpdate.forEach(field => {\r\n            if (data.hasOwnProperty(field)) {\r\n                userDetail.value[field] = data[field] ?? userDetail.value[field]\r\n            }\r\n        })\r\n    }\r\n    \r\n    const setToken = (data) => {\r\n        token.value = data\r\n    }\r\n    \r\n    const setIsLogin = (data) => {\r\n        isLogin.value = data\r\n    }\r\n    \r\n    const setParticipation = (data) => {\r\n        participation.value = data\r\n    }\r\n    \r\n    const setMyActivity = (data) => {\r\n        myActivity.value = data\r\n    }\r\n    \r\n    const setFriend = (data) => {\r\n        friend.value = data\r\n    }\r\n    \r\n    const setGroup = (data) => {\r\n        group.value = data\r\n    }\r\n    \r\n    const setFollowData = (data) => {\r\n        followData.value = data\r\n    }\r\n    \r\n    const setSystemInfo = (data) => {\r\n        systemInfo.value = data\r\n    }\r\n    \r\n    const quit = () => {\r\n        setIsLogin(false)\r\n        setToken(\"\")\r\n        setUser(emptyUserDetail)\r\n        setParticipation([])\r\n        setMyActivity([])\r\n        setFriend([])\r\n        setGroup([])\r\n        setFollowData([])\r\n        setSystemInfo([])\r\n    }\r\n    /* ************Setter ******************/\r\n\r\n    // 更新群组信息\r\n    const updateGroupInfo = (groupData) => {\r\n        const groups = getGroup()\r\n        const index = groups.findIndex(g => g.group.groupId === groupData.groupId)\r\n        \r\n        if (index !== -1) {\r\n            // 更新群组信息，但保留其他数据如成员和聊天记录\r\n            groups[index].group = {\r\n                ...groups[index].group,\r\n                groupName: groupData.groupName,\r\n                announcement: groupData.announcement,\r\n                avatar: groupData.avatar\r\n            }\r\n            \r\n            // 在uniapp中使用uni.setStorageSync替代localStorage\r\n            uni.setStorageSync('groups', JSON.stringify(groups))\r\n        }\r\n    }\r\n\r\n    return {\r\n        userDetail,\r\n        token,\r\n        isLogin,\r\n        participation,\r\n        myActivity,\r\n        friend,\r\n        group,\r\n        followData,\r\n        systemInfo,\r\n        getUser,\r\n        getToken,\r\n        getIsLogin,\r\n        setUser,\r\n        setToken,\r\n        setIsLogin,\r\n        setFriend,\r\n        setGroup,\r\n        setFollowData,\r\n        setSystemInfo,\r\n        quit,\r\n        setParticipation,\r\n        getParticipation,\r\n        setMyActivity,\r\n        getMyActivity,\r\n        getFriend,\r\n        getGroup,\r\n        getFollowData,\r\n        getSystemInfo,\r\n        updateGroupInfo,\r\n    }\r\n}, {\r\n    persist: {\r\n        enabled: true,\r\n        key: 'userStore'\r\n    }\r\n}) "],"names":["defineStore","ref","uni"],"mappings":"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"}