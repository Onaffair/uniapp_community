{"version":3,"file":"webSocketUtils.js","sources":["util/webSocketUtils.js"],"sourcesContent":["// webSocketUtils.js\r\n// UniApp适配版本的WebSocket工具类\r\n\r\nexport default class WebSocketUtils {\r\n    constructor(url, token) {\r\n        this.url = url;\r\n        this.token = token;\r\n        this.socketTask = null;\r\n        this.onMessageCallback = null;\r\n        this.onOpenCallback = null;\r\n        this.onCloseCallback = null;\r\n        this.onErrorCallback = null;\r\n    }\r\n\r\n    /**\r\n     * 设置Token\r\n     * @param {string} token - 认证令牌\r\n     */\r\n    setToken(token) {\r\n        this.token = token;\r\n    }\r\n\r\n    /**\r\n     * 初始化WebSocket连接\r\n     */\r\n    connect() {\r\n        try {\r\n            // 确保之前的连接已关闭\r\n            if (this.socketTask) {\r\n                this.close();\r\n            }\r\n\r\n            // 创建新连接\r\n            this.socketTask = uni.connectSocket({\r\n                url: `${this.url}?token=${this.token}`,\r\n                header: {\r\n                    'content-type': 'application/json'\r\n                },\r\n                success: () => {\r\n                    console.log('WebSocket连接请求已发送');\r\n                },\r\n                fail: (error) => {\r\n                    console.error('WebSocket连接请求失败', error);\r\n                    if (this.onErrorCallback) {\r\n                        this.onErrorCallback(error);\r\n                    }\r\n                }\r\n            });\r\n\r\n            // 设置事件处理器\r\n            this.setupEventHandlers();\r\n        } catch (error) {\r\n            console.error('WebSocket连接初始化失败', error);\r\n            if (this.onErrorCallback) {\r\n                this.onErrorCallback(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置事件处理器\r\n     */\r\n    setupEventHandlers() {\r\n        // 连接打开事件\r\n        this.socketTask.onOpen(() => {\r\n            console.log('WebSocket连接已建立');\r\n            if (this.onOpenCallback) {\r\n                this.onOpenCallback();\r\n            }\r\n        });\r\n\r\n        // 接收消息事件\r\n        this.socketTask.onMessage((result) => {\r\n            if (this.onMessageCallback) {\r\n                this.onMessageCallback(result.data);\r\n            }\r\n        });\r\n\r\n        // 连接关闭事件\r\n        this.socketTask.onClose(() => {\r\n            console.log('WebSocket连接已关闭');\r\n            if (this.onCloseCallback) {\r\n                this.onCloseCallback();\r\n            }\r\n            this.socketTask = null;\r\n        });\r\n\r\n        // 连接错误事件\r\n        this.socketTask.onError((error) => {\r\n            console.error('WebSocket连接错误', error);\r\n            if (this.onErrorCallback) {\r\n                this.onErrorCallback(error);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 发送消息\r\n     * @param {string} message - 要发送的消息\r\n     */\r\n    sendMessage(message) {\r\n        if (this.socketTask && this.socketTask.readyState === 1) {\r\n            this.socketTask.send({\r\n                data: message,\r\n                success: () => {\r\n                    console.log('消息发送成功');\r\n                },\r\n                fail: (error) => {\r\n                    console.error('消息发送失败', error);\r\n                }\r\n            });\r\n        } else {\r\n            console.error('WebSocket未连接或连接状态异常');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 关闭连接\r\n     */\r\n    close() {\r\n        if (this.socketTask) {\r\n            this.socketTask.close({\r\n                success: () => {\r\n                    console.log('WebSocket连接已关闭');\r\n                },\r\n                fail: (error) => {\r\n                    console.error('WebSocket关闭失败', error);\r\n                }\r\n            });\r\n            this.socketTask = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置消息接收回调\r\n     * @param {Function} callback - 消息接收回调函数\r\n     */\r\n    setOnMessageCallback(callback) {\r\n        this.onMessageCallback = callback;\r\n    }\r\n\r\n    /**\r\n     * 设置连接成功回调\r\n     * @param {Function} callback - 连接成功回调函数\r\n     */\r\n    setOnOpenCallback(callback) {\r\n        this.onOpenCallback = callback;\r\n    }\r\n\r\n    /**\r\n     * 设置连接关闭回调\r\n     * @param {Function} callback - 连接关闭回调函数\r\n     */\r\n    setOnCloseCallback(callback) {\r\n        this.onCloseCallback = callback;\r\n    }\r\n\r\n    /**\r\n     * 设置错误回调\r\n     * @param {Function} callback - 错误回调函数\r\n     */\r\n    setOnErrorCallback(callback) {\r\n        this.onErrorCallback = callback;\r\n    }\r\n} "],"names":["uni"],"mappings":"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"}